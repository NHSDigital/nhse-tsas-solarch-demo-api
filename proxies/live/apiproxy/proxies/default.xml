<ProxyEndpoint name="default">
  <PreFlow>
    <Request>
      <Step>
        <Name>FlowCallout.GetEnvironmentKeyValueMapData</Name>
      </Step>
    </Request>
  </PreFlow>

  <Flows>
    <Flow name="OptionsPreFlight">
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description/>
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="StatusEndpoint">
      <Request>
        <Step>
          <Condition>request.header.apikey = null or private.common.status-endpoint-api-key != request.header.apikey</Condition>
          <Name>RaiseFault.401Unauthorized</Name>
        </Step>
        <Step>
          <Name>ServiceCallout.CallHealthcheckEndpoint</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>javascript.SetStatusResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_status") and ((request.verb = "GET") or (request.verb = "HEAD"))
      </Condition>
    </Flow>
    <Flow name="AddIHEHeaders">
      <Description>"Adds a header to inform the back end where the request has been routed from"</Description>
      <Request>
        <Step>
          <Name>AssignMessage.AddIHEHeaders</Name>
        </Step>
      </Request>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/mhdspoc/**") and ((request.verb = "GET") or (request.verb = "HEAD") or (request.verb = "POST") or (request.verb = "PUT"))</Condition>
    </Flow>
  </Flows>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="NoRoute">
    <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
  </RouteRule>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="NoRouteStatus">
    <Condition>(proxy.pathsuffix MatchesPath "/_status") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="nhse-tsas-solarch-mhdspoc-api-target">
    <TargetEndpoint>tsas-solarch-mhdpoc-api-tlsma-target</TargetEndpoint>
    <Condition>(proxy.pathsuffix MatchesPath "/mhdspoc/**") and ((request.verb = "GET") or (request.verb = "HEAD") or (request.verb = "POST") or (request.verb = "PUT"))</Condition>
  </RouteRule>
  <RouteRule name="nhse-tsas-solarch-demo-api-target">
    <TargetEndpoint>tsas-solarch-mhdpoc-api-target</TargetEndpoint>
  <!-- Uncomment this once default endpoint enabled in all PTL environments
    <TargetEndpoint>nhse-tsas-solarch-demo-api-target</TargetEndpoint>
  -->
  </RouteRule>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
  </DefaultFaultRule>
</ProxyEndpoint>
